- start() — запускает новый поток. Поток переходит в состояние "готов" и вызывает метод run(),
начиная выполнение кода в новом потоке.

- run() — содержит код, который выполняется потоком. Если вызвать run() напрямую,
то код выполнится в текущем потоке, а не в новом. Настоящий запуск в новом потоке происходит
через start().

- setName(String name) — устанавливает имя потока. Это удобно для отладки,
чтобы различать потоки по именам.

- setPriority(int priority) — задает приоритет потока (от 1 до 10).

  - 1 — минимальный приоритет (Thread.MIN_PRIORITY)
  - 5 — стандартный приоритет (Thread.NORM_PRIORITY)
  - 10 — максимальный приоритет (Thread.MAX_PRIORITY)
Однако, приоритеты — это всего лишь подсказка для планировщика потоков,
и не всегда гарантируют порядок выполнения.

- interrupt() — отправляет сигнал потоку, что его нужно прервать.
Это не останавливает поток немедленно, но устанавливает флаг interrupted.
Поток должен самостоятельно проверять этот флаг (например, через isInterrupted())
и корректно завершаться.

- isAlive() — возвращает true, если поток был запущен и ещё не завершил выполнение.

- join(long millis) — заставляет текущий поток (тот, который вызвал join()) ждать,
пока другой поток завершит работу, или пока не пройдет указанное количество миллисекунд.
Если время millis не указано, будет ждать завершения потока бесконечно.